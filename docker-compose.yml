name: ConfigChecker
services:
  configchecker.agent:
    image: ${DOCKER_REGISTRY-}configcheckeragent
    build:
      context: .
      dockerfile: ConfigChecker.Agent/Dockerfile
    ports:
      - "56000:8080"
      - "56001:8081"
    depends_on:
      - servicebus.emulator.webapi
      # servicebus.emulator.webapi:
        # condition: service_healthy
    networks:
      sb-emulator:

  emulator:
    container_name: "servicebus-emulator"
    image: mcr.microsoft.com/azure-messaging/servicebus-emulator:latest
    volumes:
      - "${CONFIG_PATH}:/ServiceBus_Emulator/ConfigFiles/Config.json"
    ports:
      - "5672:5672"
    environment:
      SQL_SERVER: sqledge  
      MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}
      ACCEPT_EULA: ${ACCEPT_EULA}
    depends_on:
      - sqledge
    networks:
      sb-emulator:
        aliases:
          - "sb-emulator"

  data.redis:
    container_name: data.redis
    image: ${DOCKER_REGISTRY-}dataredis
    build:
      context: .
      dockerfile: ./Redis/Dockerfile
    ports:
      - "7379:6379"
    networks:
      value-provider:
        aliases:
          - "value-provider"

  sqledge:
        container_name: "sqledge"
        image: "mcr.microsoft.com/azure-sql-edge:latest"
        networks:
          sb-emulator:
            aliases:
              - "sqledge"
        environment:
          ACCEPT_EULA: ${ACCEPT_EULA}
          MSSQL_SA_PASSWORD: ${MSSQL_SA_PASSWORD}

  servicebus.emulator.webapi:
    image: ${DOCKER_REGISTRY-}servicebusemulatorwebapi
    build:
      context: .
      dockerfile: ServiceBus.Emulator.WebApi/Dockerfile
    # healthcheck:
    #   # test: ["CMD", "curl", "-f", "https://localhost:56501/healthz"]
    #   # test: "curl --fail -k https://0.0.0.0:8081/healthz || exit 1"
    #   test: "curl -k -s -I https://0.0.0.0:8081/healthz | head -n 1 | grep 200"
    #   # interval: 1m30s
    #   interval: 15s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    #   start_interval: 5s
    ports:
     - "56500:8080"
     - "56501:8081"
    depends_on:
     - emulator
    networks:
      sb-emulator:

  securevalueaccessor:
    image: ${DOCKER_REGISTRY-}securevalueaccessor
    build:
      context: .
      dockerfile: SecureValueAccessor/Dockerfile
    networks:
      value-provider:

  securevalueaccessor.webapi:
    image: ${DOCKER_REGISTRY-}securevalueaccessorwebapi
    build:
      context: .
      dockerfile: SecureValueAccessor.WebApi/Dockerfile

networks:
  sb-emulator:
  value-provider:

